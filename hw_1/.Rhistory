head(de)
ggplot(de, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de %>% dplyr::filter(adj.P.Val < 0.01), aes(label=Gene.symbol, color=NULL))
fit <- lmFit(geo_data, full_model)
fit2 <- contrasts.fit(fit, makeContrasts(auto_6 - auto_0, levels=full_model))
fit2 <- eBayes(fit2, trend = T)
de <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de)
ggplot(de, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de %>% dplyr::filter(adj.P.Val < 0.05), aes(label=Gene.symbol, color=NULL))
View(de)
View(de)
View(de)
fit <- lmFit(geo_data, full_model)
fit2 <- contrasts.fit(fit, makeContrasts(auto_6 - auto_0, levels=full_model))
fit2 <- eBayes(fit2, trend = T)
de_au <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de_au)
ggplot(de_au, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de_au %>% dplyr::filter(adj.P.Val < 0.05), aes(label=Gene.symbol, color=NULL))
fit <- lmFit(geo_data, full_model)
fit2 <- contrasts.fit(fit, makeContrasts(allo_6 - allo_0, levels=full_model))
fit2 <- eBayes(fit2, trend = T)
de_al <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de_al)
ggplot(de_al, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de_al %>% dplyr::filter(adj.P.Val < 0.01), aes(label=Gene.symbol, color=NULL))
stats <- de$t
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
load("keggSymbolHuman.rdata")
## --------------------------------------------------------------------------------
load("keggSymbolMouse.rdata")
## ----message=FALSE---------------------------------------------------------------
library(Biobase)
load("gse129260.Rdata")
library(limma)
library(sva)
library(ggplot2)
library(pheatmap)
library(RColorBrewer)
library(ggrepel)
library(dplyr)
library(fgsea)
blueWhiteRed <- colorRampPalette(c("#3859A8", "#EEEEEE", "#EE2930"))(10)
load("gse129260.Rdata")
load("keggSymbolHuman.rdata")
load("keggSymbolHuman.rdata")
stats <- de$t
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
load("keggSymbolHuman.rdata")
stats <- de_al$t
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
load("keggSymbolHuman.rdata")
stats <- de_al$t
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
load("keggSymbolHuman.rdata")
stats <- de_al$t
names(stats) <- de_al$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
head(fgseaResults, 3)
head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plotGseaTable(keggSymbolMouse[topPathways], stats, fgseaResults, gseaParam = 0.5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plotGseaTable(keggSymbolHuman[topPathways], stats, fgseaResults, gseaParam = 0.5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plotGseaTable(keggSymbolHuman[topPathways], stats, fgseaResults, gseaParam = 0.5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways
# plotGseaTable(keggSymbolHuman[topPathways], stats, fgseaResults, gseaParam = 0.5)
load("keggSymbolHuman.rdata")
stats <- de_al$t
names(stats) <- de_al$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways
# plotGseaTable(keggSymbolHuman[topPathways], stats, fgseaResults, gseaParam = 0.5)
load("keggSymbolHuman.rdata")
stats <- de_au$t
names(stats) <- de_au$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage,     label=rownames(plotData))) +   geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage,     label=rownames(geo_data))) +   geom_point() + theme_bw() + theme(aspect.ratio = 1)
rownames(geo_data)
colnames(geo_data)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage,     label=colnames(geo_data))) +   geom_point() + theme_bw() + theme(aspect.ratio = 1)
colnames(plotData)
row(plotData)
rownames(plotData)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage,     label=rownames(plotData))) +   geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, label=rownames(plotData))) +   geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage)) + geom_text(aes(label=rownames(plotData)))+ geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage)) + geom_text(aes(label=rownames(plotData)))+ geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage)) + geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage)) + geom_point() + theme_bw() + theme(aspect.ratio = 1)
variance <- pcas$sdev^2
variance <- variance / sum(variance)
ggplot(data=data.frame(component=1:46, percent=variance * 100),
aes(x=component, y=percent)) +
geom_point() + geom_line() + theme_bw()
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) + geom_text(aes(label=rownames(plotData))) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) + geom_text(aes(label=rownames(plotData)), nudge_x = -2, nudge_y = 0) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) + geom_text(aes(label=rownames(plotData)), nudge_x = -10, nudge_y = 0) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) + geom_text(aes(label=rownames(plotData)), nudge_x = -30, nudge_y = 0) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
geo_dat <- geo_data[,pData(geo_data)$id != "GSM765521"]
geo_dat <- geo_data[,pData(geo_data)$id != "GSM765521"]
pcas <- prcomp(t(exprs(geo_dat)), scale. = T)
View(geo_dat)
geo_dat <- geo_data[,pData(geo_data)$id == "GSM765521"]
pcas <- prcomp(t(exprs(geo_dat)), scale. = T)
geo_dat <- geo_data[,pData(geo_data)$rowid == "GSM765521"]
pcas <- prcomp(t(exprs(geo_dat)), scale. = T)
View(geo_dat)
View(geo_data)
geo_dat <- geo_data[,pData(geo_data)$ID == "GSM765521"]
pcas <- prcomp(t(exprs(geo_dat)), scale. = T)
## ----message=F------------------------------------------------------------------------
fData(geo_data) <- fData(geo_data)[, c("ID", "Gene symbol", "Gene ID")]
head(fData(geo_data))
pData(geo_data) <- pData(geo_data)[, c("title", "fecal microbial transplant type:ch1", "sample id:ch1","disease state:ch1", "Stage:ch1", "description")]
head(pData(geo_data))
colnames(pData(geo_data))
geo_data <- data
colnames(pData(geo_data))
pData(geo_data) <- pData(geo_data)[, c("title","geo_accession", "fecal microbial transplant type:ch1", "sample id:ch1","disease state:ch1", "Stage:ch1", "description")]
pData(geo_data) <- cbind(pData(geo_data), transpose(strsplit(pData(geo_data)[, c("title")], " ")))
pData(geo_data) <- pData(geo_data)[,1:(length(pData(geo_data))-1)]
colnames(pData(geo_data)) <- c("title", "geo", "type",  "sample_id",  "disease", "stage", "description", "experiment")
pData(geo_data)$sample_id <- gsub("Tech_replicate_","",pData(geo_data)$sample_id)
pData(geo_data)$sample_id <- gsub("_","",pData(geo_data)$sample_id)
head(pData(geo_data))
colnames(fData(geo_data))
## ----message=F------------------------------------------------------------------------
fData(geo_data) <- fData(geo_data)[, c("ID", "Gene symbol", "Gene ID")]
head(fData(geo_data))
ggplot(data=data.frame(expression=exprs(geo_data)[, 1]),
aes(x=expression)) +
geom_histogram()
ggplot(data=data.frame(expression_log2=log2(exprs(geo_data) [, 1])),
aes(x=expression_log2)) +
geom_histogram()
min(exprs(geo_data))
ggplot(data=data.frame(expression_log2=normalizeBetweenArrays(log2(exprs(geo_data)+1), method="quantile") [, 1]),
aes(x=expression_log2)) +
geom_histogram()
exprs(geo_data) <- normalizeBetweenArrays(log2(exprs(geo_data)+1), method="quantile")
twoSamples <- melt(exprs(geo_data[, 1:2]))
ggplot(data=twoSamples, aes(x=value)) +
facet_grid(~Var2) + geom_histogram()
geo_data <- geo_data[!grepl("///", fData(geo_data)$`Gene symbol`), ]
geo_data <- geo_data[fData(geo_data)$`Gene symbol` != "", ]
fData(geo_data)$mean_expression <- apply(exprs(geo_data), 1, mean)
geo_data <- geo_data[order(fData(geo_data)$mean_expression, decreasing = TRUE), ]
geo_data <- geo_data[!duplicated(fData(geo_data)$`Gene ID`), ]
geo_data <- geo_data[seq_len(12000), ]
dim(geo_data)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) + geom_text(aes(label=rownames(plotData)), nudge_x = -30, nudge_y = 0) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
geo_dat <- geo_data[,pData(geo_data)$geo != "GSM765521"]
pcas <- prcomp(t(exprs(geo_dat)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_dat))
ggplot(plotDat, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
geo_dat <- geo_data[,pData(geo_data)$geo != "GSM765521"]
pcas <- prcomp(t(exprs(geo_dat)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_dat))
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage)) + geom_point() + theme_bw() + theme(aspect.ratio = 1)
geo_data <- geo_data[,pData(geo_data)$geo != "GSM765521"]
pcas <- prcomp(t(exprs(geo_dat)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_dat))
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
geo_data <- geo_data[,pData(geo_data)$geo != "GSM765521"]
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage)) + geom_point() + theme_bw() + theme(aspect.ratio = 1)
variance <- pcas$sdev^2
variance <- variance / sum(variance)
ggplot(data=data.frame(component=1:46, percent=variance * 100),
aes(x=component, y=percent)) +
geom_point() + geom_line() + theme_bw()
View(geo_data)
variance <- pcas$sdev^2
variance <- variance / sum(variance)
ggplot(data=data.frame(component=1:45, percent=variance * 100),
aes(x=component, y=percent)) +
geom_point() + geom_line() + theme_bw()
batch <- pData(geo_data)$sample_id
modcombat <- model.matrix(~1, data=pData(geo_data))
combat_geo_data = ComBat(dat=exprs(geo_data), batch=batch, mod=modcombat)
pcas <- prcomp(t(combat_geo_data), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
variance <- pcas$sdev^2
variance <- variance / sum(variance)
ggplot(data=data.frame(component=1:45, percent=variance * 100),
aes(x=component, y=percent)) +
geom_point() + geom_line() + theme_bw()
geo_auto <- geo_data[,pData(geo_data)$type == "Autologous"]
pData(geo_auto)
auto_model <- model.matrix(~0 + experiment + sample_id, data = pData(geo_auto))
colnames(auto_model)
colnames(auto_model) <- c("auto_0", "auto_6", "p13", "p14", "p16", "p17", "p23", "p24")
fit <- lmFit(geo_auto, auto_model)
fit2 <- contrasts.fit(fit, makeContrasts(auto_6 - auto_0, levels=auto_model))
fit2 <- eBayes(fit2, trend = T)
de <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de)
ggplot(de, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de %>% dplyr::filter(adj.P.Val < 0.01), aes(label=Gene.symbol, color=NULL))
geo_allo <- geo_data[,pData(geo_data)$type == "Allogenic"]
pData(geo_allo)
allo_model <- model.matrix(~0 + experiment + sample_id, data = pData(geo_allo))
colnames(allo_model)
colnames(allo_model) <- c("allo_0", "allo_6", "p20", "p21", "p22", "p8")
fit <- lmFit(geo_allo, allo_model)
fit2 <- contrasts.fit(fit, makeContrasts(allo_6 - allo_0, levels=allo_model))
fit2 <- eBayes(fit2, trend = T)
de <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de)
ggplot(de, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de %>% dplyr::filter(adj.P.Val < 0.05), aes(label=Gene.symbol, color=NULL))
full_model <- model.matrix(~0 + experiment + sample_id, data = pData(geo_data))
colnames(full_model)
colnames(full_model) <- c("allo_0", "allo_6", "auto_0", "auto_6", "p12", "p13", "p14", "p16", "p17", "p20", "p21", "p22", "p23", "p24", "p8")
fit <- lmFit(geo_data, full_model)
fit2 <- contrasts.fit(fit, makeContrasts(allo_6 - allo_0, levels=full_model))
fit2 <- eBayes(fit2, trend = T)
de_al <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de_al)
ggplot(de_al, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de_al %>% dplyr::filter(adj.P.Val < 0.01), aes(label=Gene.symbol, color=NULL))
fit <- lmFit(geo_data, full_model)
fit2 <- contrasts.fit(fit, makeContrasts(allo_6 - allo_0, levels=full_model))
fit2 <- eBayes(fit2, trend = T)
de_al <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de_al)
ggplot(de_al, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de_al %>% dplyr::filter(adj.P.Val < 0.05), aes(label=Gene.symbol, color=NULL))
fit <- lmFit(geo_data, full_model)
fit2 <- contrasts.fit(fit, makeContrasts(auto_6 - auto_0, levels=full_model))
fit2 <- eBayes(fit2, trend = T)
de_au <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de_au)
ggplot(de_au, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de_au %>% dplyr::filter(adj.P.Val < 0.05), aes(label=Gene.symbol, color=NULL))
load("keggSymbolHuman.rdata")
stats <- de_al$t
names(stats) <- de_al$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways
# plotGseaTable(keggSymbolHuman[topPathways], stats, fgseaResults, gseaParam = 0.5)
load("keggSymbolHuman.rdata")
stats <- de_au$t
names(stats) <- de_au$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways
library(GEOquery)
library(Biobase)
library(ggplot2)
library(reshape2)
library(limma)
library(MASS)
library(data.table)
library(sva)
library(pheatmap)
library(RColorBrewer)
library(ggrepel)
library(dplyr)
library(fgsea)
data <- getGEO("GSE30854", AnnotGPL = TRUE)[[1]]
head(pData(data))
geo_data <- data
colnames(pData(geo_data))
pData(geo_data) <- pData(geo_data)[, c("title","geo_accession", "fecal microbial transplant type:ch1", "sample id:ch1","disease state:ch1", "Stage:ch1", "description")]
pData(geo_data) <- cbind(pData(geo_data), transpose(strsplit(pData(geo_data)[, c("title")], " ")))
pData(geo_data) <- pData(geo_data)[,1:(length(pData(geo_data))-1)]
colnames(pData(geo_data)) <- c("title", "geo", "type",  "sample_id",  "disease", "stage", "description", "experiment")
pData(geo_data)$sample_id <- gsub("Tech_replicate_","",pData(geo_data)$sample_id)
pData(geo_data)$sample_id <- gsub("_","",pData(geo_data)$sample_id)
head(pData(geo_data))
colnames(fData(geo_data))
## ----message=F------------------------------------------------------------------------
fData(geo_data) <- fData(geo_data)[, c("ID", "Gene symbol", "Gene ID")]
head(fData(geo_data))
ggplot(data=data.frame(expression=exprs(geo_data)[, 1]),
aes(x=expression)) +
geom_histogram()
ggplot(data=data.frame(expression_log2=log2(exprs(geo_data) [, 1])),
aes(x=expression_log2)) +
geom_histogram()
min(exprs(geo_data))
ggplot(data=data.frame(expression_log2=normalizeBetweenArrays(log2(exprs(geo_data)+1), method="quantile") [, 1]),
aes(x=expression_log2)) +
geom_histogram()
exprs(geo_data) <- normalizeBetweenArrays(log2(exprs(geo_data)+1), method="quantile")
twoSamples <- melt(exprs(geo_data[, 1:2]))
ggplot(data=twoSamples, aes(x=value)) +
facet_grid(~Var2) + geom_histogram()
geo_data <- geo_data[!grepl("///", fData(geo_data)$`Gene symbol`), ]
geo_data <- geo_data[fData(geo_data)$`Gene symbol` != "", ]
fData(geo_data)$mean_expression <- apply(exprs(geo_data), 1, mean)
geo_data <- geo_data[order(fData(geo_data)$mean_expression, decreasing = TRUE), ]
geo_data <- geo_data[!duplicated(fData(geo_data)$`Gene ID`), ]
geo_data <- geo_data[seq_len(12000), ]
dim(geo_data)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) + geom_text(aes(label=rownames(plotData)), nudge_x = -30, nudge_y = 0) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
geo_data <- geo_data[,pData(geo_data)$geo != "GSM765521"]
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
pcas <- prcomp(t(exprs(geo_data)), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=sample_id, shape = stage)) + geom_point() + theme_bw() + theme(aspect.ratio = 1)
variance <- pcas$sdev^2
variance <- variance / sum(variance)
ggplot(data=data.frame(component=1:45, percent=variance * 100),
aes(x=component, y=percent)) +
geom_point() + geom_line() + theme_bw()
batch <- pData(geo_data)$sample_id
modcombat <- model.matrix(~1, data=pData(geo_data))
combat_geo_data = ComBat(dat=exprs(geo_data), batch=batch, mod=modcombat)
pcas <- prcomp(t(combat_geo_data), scale. = T)
plotData <- cbind(pcas$x[, 1:2], pData(geo_data))
ggplot(plotData, aes(x=PC1, y=PC2, color=experiment)) +
geom_point() + theme_bw() + theme(aspect.ratio = 1)
variance <- pcas$sdev^2
variance <- variance / sum(variance)
ggplot(data=data.frame(component=1:45, percent=variance * 100),
aes(x=component, y=percent)) +
geom_point() + geom_line() + theme_bw()
geo_auto <- geo_data[,pData(geo_data)$type == "Autologous"]
pData(geo_auto)
auto_model <- model.matrix(~0 + experiment + sample_id, data = pData(geo_auto))
colnames(auto_model)
colnames(auto_model) <- c("auto_0", "auto_6", "p13", "p14", "p16", "p17", "p23", "p24")
fit <- lmFit(geo_auto, auto_model)
fit2 <- contrasts.fit(fit, makeContrasts(auto_6 - auto_0, levels=auto_model))
fit2 <- eBayes(fit2, trend = T)
de <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de)
ggplot(de, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de %>% dplyr::filter(adj.P.Val < 0.01), aes(label=Gene.symbol, color=NULL))
geo_allo <- geo_data[,pData(geo_data)$type == "Allogenic"]
pData(geo_allo)
allo_model <- model.matrix(~0 + experiment + sample_id, data = pData(geo_allo))
colnames(allo_model)
colnames(allo_model) <- c("allo_0", "allo_6", "p20", "p21", "p22", "p8")
fit <- lmFit(geo_allo, allo_model)
fit2 <- contrasts.fit(fit, makeContrasts(allo_6 - allo_0, levels=allo_model))
fit2 <- eBayes(fit2, trend = T)
de <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de)
ggplot(de, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de %>% dplyr::filter(adj.P.Val < 0.05), aes(label=Gene.symbol, color=NULL))
full_model <- model.matrix(~0 + experiment + sample_id, data = pData(geo_data))
colnames(full_model)
colnames(full_model) <- c("allo_0", "allo_6", "auto_0", "auto_6", "p12", "p13", "p14", "p16", "p17", "p20", "p21", "p22", "p23", "p24", "p8")
fit <- lmFit(geo_data, full_model)
fit2 <- contrasts.fit(fit, makeContrasts(allo_6 - allo_0, levels=full_model))
fit2 <- eBayes(fit2, trend = T)
de_al <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de_al)
ggplot(de_al, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de_al %>% dplyr::filter(adj.P.Val < 0.05), aes(label=Gene.symbol, color=NULL))
fit <- lmFit(geo_data, full_model)
fit2 <- contrasts.fit(fit, makeContrasts(auto_6 - auto_0, levels=full_model))
fit2 <- eBayes(fit2, trend = T)
de_au <- topTable(fit2, adjust.method="BH", number=Inf, sort.by = "P")
head(de_au)
ggplot(de_au, aes(x=logFC, y=-log10(adj.P.Val), color=adj.P.Val < 0.05)) +
geom_point() + theme_bw() +
geom_text_repel(data=de_au %>% dplyr::filter(adj.P.Val < 0.05), aes(label=Gene.symbol, color=NULL))
load("keggSymbolHuman.rdata")
stats <- de_al$t
names(stats) <- de_al$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways
# plotGseaTable(keggSymbolHuman[topPathways], stats, fgseaResults, gseaParam = 0.5)
load("keggSymbolHuman.rdata")
stats <- de_au$t
names(stats) <- de_au$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways
load("keggSymbolHuman.rdata")
stats <- de_au$t
names(stats) <- de_au$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways, stats
load("keggSymbolHuman.rdata")
stats <- de_au$t
names(stats) <- de_au$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
stats
# plotGseaTable(keggSymbolHuman[topPathways], stats, fgseaResults, gseaParam = 0.5)
stats
load("keggSymbolHuman.rdata")
stats <- de_al$t
names(stats) <- de_al$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
topPathways
# plotGseaTable(keggSymbolHuman[topPathways], stats, fgseaResults, gseaParam = 0.5)
load("keggSymbolHuman.rdata")
stats <- de_au$t
names(stats) <- de_au$Gene.symbol
fgseaResults <- fgseaMultilevel(keggSymbolHuman, stats, minSize = 15, maxSize = 500)
# head(fgseaResults, 5)
topPathwaysUp <- fgseaResults[ES > 0, ][head(order(pval), n=5), pathway]
topPathwaysDown <- fgseaResults[ES < 0, ][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
min(exprs(geo_data))
